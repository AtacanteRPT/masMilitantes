<link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css" integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
    crossorigin="" />
<script src="https://unpkg.com/leaflet@1.4.0/dist/leaflet.js" integrity="sha512-QVftwZFqvtRNi0ZyCtsznlKSWOStnDORoefr1enyq5mVL4tmKB3S/EnC3rRJcxCPavG10IcrVGSmPh6Qw5lwrg=="
    crossorigin=""></script>
<!--<script src="/img/jquery.autocomplete.js">
</script>-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@0.5.0"></script>
<script src="/js/jqueryautocomplete.js">
</script>
<style>
    #map {
        width: 100%;
        height: 580px;
        box-shadow: 5px 5px 5px #888;
    }

    div.collapse {
        width: 100%;
        margin: auto;
    }

    .leaflet-popup-content {
        width: auto !important;
    }

    .easy-autocomplete {
        width: 100% !important
    }

    .easy-autocomplete input {
        width: 100%;
    }
</style>
<br>
<br>
<br>
<div class="container">

    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="home-tab" data-toggle="tab" href="#home" role="tab" aria-controls="home" aria-selected="true">Mapa Recintos</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="profile-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="profile" aria-selected="false">Estadística</a>
        </li>

    </ul>
</div>
<div class="tab-content" id="myTabContent">    
    <!-- TAB UNO -->
    <div class="tab-pane fade show active" id="home" role="tabpanel" aria-labelledby="home-tab">
        <br>
        <div class="container">
            <div class="row">
                <div class="form-group col-6 col-md-3">
                    <label for="selectC">Circunscripción</label>
                    <select class="form-control" id="selectC">
                        <option>Selecionar</option>

                        <% for(var i=0;i<circunscripciones.length;i++){%>
                            <option value='<%= i%>'>
                                <%= circunscripciones[i].nombre%>
                            </option>
                            <% }%>
                    </select>
                </div>
                <div class="form-group col-6 col-md-3">
                    <label for="selectDistrito">Distrito</label>

                    <select class="form-control" id="selectDistrito">
                        <option>Selecionar</option>

                    </select>
                </div>
                <div class="form-group col-6 col-md-3">
                    <label for="selectZona">Zona</label>
                    <select class="form-control" id="selectZona">
                        <option>Selecionar</option>

                    </select>
                </div>
                <div class="form-group col-6 col-md-3">
                    <label for="selectRecinto">Recinto</label>
                    <select class="form-control" id="selectRecinto">

                        <% for(var i=0;i<recintos.length;i++){%>
                            <option value='<%= recintos[i].id%>'>
                                <%= i+1%>-
                                    <%= recintos[i].nombre%>
                            </option>
                            <% }%>
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="col-12 col-md-8">
                    <label for="Documento de Identidad">Buscar Recinto</label>
                    <input type="text" class="form-control" id="autocomplete" placeholder="Nombre del recinto">
                </div>
            </div>
            <br>

        </div>

        <div class="card border-primary">
            <h5 class="card-header">Mapa de Recintos</h5>
            <div class="card-body">

                <div id="map"></div>
            </div>
        </div>

        <div class="container">
            <table id="tablaRecinto" class="table">
                <thead>
                    <th>MESA</th>
                    <th>Votos Inscritos</th>
                    <th>Votos Validos</th>
                    <th>Votos Blancos</th>
                    <th>Votos Nulos</th>
                    <th>Votos Emitidos</th>

                    <th> % Validos</th>
                    <th> % Blancos</th>
                    <th> % Nulos</th>
                    <th> % Emitidos</th>

                </thead>
                <tbody>

                </tbody>
            </table>
        </div>


    </div>
    <!-- END TAB UNO -->

    <!-- TAB DOS -->
    <div class="tab-pane fade" id="profile" role="tabpanel" aria-labelledby="profile-tab">

        <!-- <div class="container">

            <div class="row">
                <div class="col-12 col-md-9">

                    <div class="chart-container">
                        <canvas id="chart3"></canvas>
                    </div>
                    <br>
                    <div class="chart-container">
                        <canvas id="chart" width="300" height="250"></canvas>
                    </div>
                </div>
                <div class="col-12 col-md-3">
                    <br>

                    <label for="autocomplete2">Buscar Recinto</label>
                    <input type="text" class="form-control" id="autocomplete2" placeholder="Nombre del recinto">

                    <label for="selectC2">Circunscripción</label>
                    <select class="form-control" id="selectC2">
                        <option>Selecionar</option>

                        <% for(var i=0;i<circunscripciones.length;i++){%>
                            <option value='<%= i%>'>
                                <%= circunscripciones[i].nombre%>
                            </option>
                            <% }%>
                    </select>
                    <label for="selectDistrito2">Distrito</label>

                    <select class="form-control" id="selectDistrito2">
                        <option>Selecionar</option>

                    </select>
                    <label for="selectZona2">Zona</label>
                    <select class="form-control" id="selectZona2">
                        <option>Selecionar</option>

                    </select>
                    <label for="selectRecinto2">Recinto</label>
                    <select class="form-control" id="selectRecinto2">

                        <% for(var i=0;i<recintos.length;i++){%>
                            <option value='<%= recintos[i].id%>'>
                                <%= i+1%>-
                                    <%= recintos[i].nombre%>
                            </option>
                            <% }%>
                    </select>

                </div>

            </div>
            <br>
            <div class="row">
                <div class="col-12 col-md-12">
                    <div class="form-group col-6 col-md-3">
                        <label for="selectC3">Incidencia por Circunscripción</label>
                        <select class="form-control" id="selectC3">
                            <option>Selecionar</option>

                            <% for(var i=0;i<circunscripciones.length;i++){%>
                                <option value='<%= i%>'>
                                    <%= circunscripciones[i].nombre%>
                                </option>
                                <% }%>
                        </select>
                    </div>
                </div>
                <div class="col-12 col-md-12">
                    <canvas id="chart2" height="600"></canvas>

                </div>
            </div>
        </div> -->
        <div class="container">

            <div class="row">
              <div class="col-12 col-md-9">
      
                <div class="chart-container">
                  <!--<canvas id="chart"></canvas>-->
                  <canvas id="chart3" ></canvas>
                </div>
                <br>
                <div class="chart-container">
                  <!--<canvas id="chart"></canvas>-->
                  <canvas id="chart" width="300" height="250"></canvas>
                </div>
              </div>
              <div class="col-12 col-md-3">
                <br>
      
                <label for="autocomplete2">Buscar Recinto</label>
                <input type="text" class="form-control" id="autocomplete2" placeholder="Nombre del recinto">
      
                <label for="selectC2">Circunscripción</label>
                <select class="form-control" id="selectC2">
                  <option>Selecionar</option>
      
                  <% for(var i=0;i<circunscripciones.length;i++){%>
                    <option value='<%= i%>'>
                      <%= circunscripciones[i].nombre%>
                    </option>
                    <% }%>
                </select>
                <label for="selectDistrito2">Distrito</label>
      
                <select class="form-control" id="selectDistrito2">
                  <option>Selecionar</option>
      
                </select>
                <label for="selectZona2">Zona</label>
                <select class="form-control" id="selectZona2">
                  <option>Selecionar</option>
      
                </select>
                <label for="selectRecinto2">Recinto</label>
                <select class="form-control" id="selectRecinto2">
      
                  <% for(var i=0;i<recintos.length;i++){%>
                    <option value='<%= recintos[i].id%>'>
                      <%= i+1%>-
                        <%= recintos[i].nombre%>
                    </option>
                    <% }%>
                </select>
      
              </div>
      
            </div>
            <br>
            <div class="row">
              <div class="col-12 col-md-12">
                <div class="form-group col-6 col-md-3">
                  <label for="selectC3">Incidencia por Circunscripción</label>
                  <select class="form-control" id="selectC3">
                    <option>Selecionar</option>
      
                    <% for(var i=0;i<circunscripciones.length;i++){%>
                      <option value='<%= i%>'>
                        <%= circunscripciones[i].nombre%>
                      </option>
                      <% }%>
                  </select>
                </div>
              </div>
              <div class="col-12 col-md-12">
                <canvas id="chart2" height="600"></canvas>
      
              </div>
            </div>
          </div>

    </div>
    <!-- END TAB DOS -->

</div>




<script>
    // $('.collapse').collapse()
    // initialize the map
    // var map = L.map('map').setView([-16.43, -68.17], 13);
    var map = L.map('map', {
        center: [-16.504414, -68.125644],
        zoom: 13
    });
    var auxRecintos = <%- JSON.stringify(recintos) %>;
    var auxZonas = <%- JSON.stringify(zonas) %>;
    var auxDistritos = <%- JSON.stringify(distritos) %>;
    var auxCircunscripciones = <%- JSON.stringify(circunscripciones) %>;
    var marcas = [];
    console.log(auxRecintos)
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);
    var firefoxIcon = L.icon({
        // iconUrl: 'http://joshuafrazier.info/images/firefox.svg',
        iconUrl: 'https://images.emojiterra.com/google/android-pie/512px/1f3e0.png',
        // iconUrl: 'https://quantitas.net/sites/default/files/00%20-%20Colegio.png',
        iconSize: [38, 38], // size of the icon
    });
    auxRecintos.forEach(function (recinto, index) {
        if (recinto.latitud != null || recinto.longitud != null) {
            var auxMarca = {};
            var sw = false;
            auxMarca['marca-' + recinto.id] = L.marker([recinto.latitud, recinto.longitud], {
                icon: firefoxIcon
            }).on('click', function () {
                if (sw) {
                    $('#info' + recinto.id).attr('hidden', false)
                } {
                    $('#info' + recinto.id).attr('hidden', true)
                }
                sw = true
            })
                .addTo(map);


            var sortMesas = recinto.mesas.sort(function (a, b) {
                // a must be equal to b
                return a.nombre - b.nombre;
            });

            var datoMesas = '';
            var totalInscritos = 0;
            var totalValidos = 0;
            var totalBlancos = 0;
            var totalNulos = 0;
            var totalEmitidos = 0;
            sortMesas.forEach(function (mesa) {

                totalInscritos = totalInscritos + parseInt(mesa.inscritos);
                totalValidos = totalValidos + parseInt(mesa.votosValidos);
                totalBlancos = totalBlancos + parseInt(mesa.votosBlancos);
                totalNulos = totalNulos + parseInt(mesa.votosNulos);
                totalEmitidos = totalEmitidos + parseInt(mesa.votosEmitidos);
                datoMesas = datoMesas + '<tr>' +
                    '<th>' + mesa.nombre + '</th>' +
                    '<th>' + mesa.inscritos + '</th>' +
                    '<th>' + mesa.votosValidos + '</th>' +
                    '<th>' + mesa.votosBlancos + '</th>' +
                    '<th>' + mesa.votosNulos + '</th>' +
                    '<th>' + mesa.votosEmitidos + '</th>' +
                    '<th>' + ((100 * mesa.votosValidos) / mesa.inscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * mesa.votosBlancos) / mesa.inscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * mesa.votosNulos) / mesa.inscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * mesa.votosEmitidos) / mesa.inscritos).toFixed(2) + '%</th>' +

                    '</tr>'

            })
            datoMesas = datoMesas + '<tr  class="table-primary">' +
                '<th>TOTAL </th>' +
                //'<th>' + totalInscritos + '</th>' +
                '<th>' + totalValidos + '</th>' +
                '<th>' + totalBlancos + '</th>' +
                '<th>' + totalNulos + '</th>' +
                '<th>' + totalEmitidos + '</th>' +
                '<th>' + ((100 * totalValidos) / totalInscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * totalBlancos) / totalInscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * totalNulos) / totalInscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * totalEmitidos) / totalInscritos).toFixed(2) + '%</th>' +

                '</tr>';
            // console.log('DATO MESAS', datoMesas)


            var zona = auxZonas.filter(data => {
                return data.id == recinto.idZona
            })
            // console.log('ZONA AAA', zona)
            var distrito = auxDistritos.filter(data => {
                return data.id == zona[0].idDistrito
            })
            var circunscripcion = auxCircunscripciones.filter(data => {
                return data.id == distrito[0].idCircunscripcion
            })

            var collapse = '<p  data-toggle="collapse" data-target="#collapse' + recinto.id + '"  aria-controls="collapse' + recinto.id + '">Recinto :' + recinto.nombre +

                '<div class="card">' +
                '<div id="collapse' + recinto.id + '" class="collapse" aria-labelledby="headingOne">' +
                ' <div class="card-body">' +
                'Circunscripcion: ' + circunscripcion[0].nombre + ' - ' + distrito[0].nombre + ' - Zona:' + zona[0].nombre +
                '<table class="table">' +
                '<thead>' +
                '<th>MESA</th>' +
               //'<th>Inscritos</th>' +
                '<th>Votos Validos</th>' +
                '<th>Votos Blancos</th>' +
                '<th>Votos Nulos</th>' +
                '<th>Votos Emitidos</th>' +

                '<th> % Validos</th>' +
                '<th> % Blancos</th>' +
                '<th> % Nulos</th>' +
                '<th> % Emitidos</th>' +

                '</thead>' +
                '<tbody>' +
                datoMesas +
                '</tbody>' +
                ' </table>' +

                '</div>' +
                '</div>' +
                '</div>';
            // console.log('COLLAPSE', collapse)
            auxMarca['marca-' + recinto.id].bindPopup(
                collapse, {
                    closeOnClick: false,
                    autoClose: false,
                    // minWdth: '1000',
                    maxWidth: 'auto',
                    // autoPan: true,
                    // className: 'custom'
                }).openPopup()
            // console.log("MARKA", auxMarca['marca-' + recinto.id])
        }


        $('#nombreRecinto' + index).click(function () {
            console.log("click Recinto")
            $('#info' + index).attr('hidden', false)
        });


    })

    var options = {
        data: auxRecintos,
        getValue: "nombre",
        list: {
            match: {
                enabled: true
            },
            onClickEvent: function () {
                var value = $("#autocomplete").getSelectedItemData().id;

                console.log("VALUE", value)
                $('#tablaRecinto > tbody').empty();
                var auxRecinto = auxRecintos.filter(data => {
                    return data.id == value
                });
                var recintoSeleccionado = auxRecinto[0]
                map.setView([recintoSeleccionado.latitud, recintoSeleccionado.longitud], 19);
                var totalInscritos = 0;
                var totalValidos = 0;
                var totalBlancos = 0;
                var totalNulos = 0;
                var totalEmitidos = 0;
                recintoSeleccionado.mesas.forEach(function (mesa, index) {
                    totalInscritos = totalInscritos + parseInt(mesa.inscritos);
                    totalValidos = totalValidos + parseInt(mesa.votosValidos);
                    totalBlancos = totalBlancos + parseInt(mesa.votosBlancos);
                    totalNulos = totalNulos + parseInt(mesa.votosNulos);
                    totalEmitidos = totalEmitidos + parseInt(mesa.votosEmitidos);
                    $('#tablaRecinto > tbody').append('<tr>' +
                        '<th>' + mesa.nombre + '</th>' +
                        '<th>' + mesa.inscritos + '</th>' +
                        '<th>' + mesa.votosValidos + '</th>' +
                        '<th>' + mesa.votosBlancos + '</th>' +
                        '<th>' + mesa.votosNulos + '</th>' +
                        '<th>' + mesa.votosEmitidos + '</th>' +
                        '<th>' + ((100 * mesa.votosValidos) / mesa.inscritos).toFixed(2) + '%</th>' +
                        '<th>' + ((100 * mesa.votosBlancos) / mesa.inscritos).toFixed(2) + '%</th>' +
                        '<th>' + ((100 * mesa.votosNulos) / mesa.inscritos).toFixed(2) + '%</th>' +
                        '<th>' + ((100 * mesa.votosEmitidos) / mesa.inscritos).toFixed(2) + '%</th>' +
                        '</tr>')

                    $("#autocomplete").val('');

                }, this);
                $('#tablaRecinto > tbody').append(
                    '<tr  class="table-primary">' +
                    '<th>TOTAL </th>' +
                    //'<th>' + totalInscritos + '</th>' +
                    '<th>' + totalValidos + '</th>' +
                    '<th>' + totalBlancos + '</th>' +
                    '<th>' + totalNulos + '</th>' +
                    '<th>' + totalEmitidos + '</th>' +
                    '<th>' + ((100 * totalValidos) / totalInscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * totalBlancos) / totalInscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * totalNulos) / totalInscritos).toFixed(2) + '%</th>' +
                    '<th>' + ((100 * totalEmitidos) / totalInscritos).toFixed(2) + '%</th>' +

                    '</tr>'
                )
            }
        },
        template: {
            type: "description",
            fields: {
                description: "id"
            }
        }
    };

    $("#autocomplete").easyAutocomplete(options);


    $('#selectRecinto').click(function () {
        $('#tablaRecinto > tbody').empty();
        var auxRecinto = auxRecintos.filter(data => {
            return data.id == $('#selectRecinto').val()
        })
        console.log('AUX RECINTO', auxRecinto)
        var recintoSeleccionado = auxRecinto[0]
        console.log('RECINTO SELECIONADO', recintoSeleccionado)
        map.setView([recintoSeleccionado.latitud, recintoSeleccionado.longitud], 19);
        var totalInscritos = 0;
        var totalValidos = 0;
        var totalBlancos = 0;
        var totalNulos = 0;
        var totalEmitidos = 0;
        recintoSeleccionado.mesas.forEach(function (mesa, index) {
            totalInscritos = totalInscritos + parseInt(mesa.inscritos);
            totalValidos = totalValidos + parseInt(mesa.votosValidos);
            totalBlancos = totalBlancos + parseInt(mesa.votosBlancos);
            totalNulos = totalNulos + parseInt(mesa.votosNulos);
            totalEmitidos = totalEmitidos + parseInt(mesa.votosEmitidos);
            $('#tablaRecinto > tbody').append('<tr>' +
                '<th>' + mesa.nombre + '</th>' +
                '<th>' + mesa.inscritos + '</th>' +
                '<th>' + mesa.votosValidos + '</th>' +
                '<th>' + mesa.votosBlancos + '</th>' +
                '<th>' + mesa.votosNulos + '</th>' +
                '<th>' + mesa.votosEmitidos + '</th>' +
                '<th>' + ((100 * mesa.votosValidos) / mesa.inscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * mesa.votosBlancos) / mesa.inscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * mesa.votosNulos) / mesa.inscritos).toFixed(2) + '%</th>' +
                '<th>' + ((100 * mesa.votosEmitidos) / mesa.inscritos).toFixed(2) + '%</th>' +
                '</tr>')

        }, this);
        $('#tablaRecinto > tbody').append(
            '<tr  class="table-primary">' +
            '<th>TOTAL </th>' +
            //'<th>' + totalInscritos + '</th>' +
            '<th>' + totalValidos + '</th>' +
            '<th>' + totalBlancos + '</th>' +
            '<th>' + totalNulos + '</th>' +
            '<th>' + totalEmitidos + '</th>' +
            '<th>' + ((100 * totalValidos) / totalInscritos).toFixed(2) + '%</th>' +
            '<th>' + ((100 * totalBlancos) / totalInscritos).toFixed(2) + '%</th>' +
            '<th>' + ((100 * totalNulos) / totalInscritos).toFixed(2) + '%</th>' +
            '<th>' + ((100 * totalEmitidos) / totalInscritos).toFixed(2) + '%</th>' +

            '</tr>'
        )
        // map.setZoom(16)
    });
    $('#selectC').change(function () {
        console.log('SelectVal', $('#selectC').val())
        var distritos = auxDistritos.filter(data => {
            return data.idCircunscripcion == auxCircunscripciones[$('#selectC').val()].id
        });
        $('#selectDistrito').empty();
        console.log('DISTRITOS', distritos)
        $('#selectDistrito').append('<option>Selecionar</option>')
        distritos.forEach(function (distrito) {
            $('#selectDistrito').append(
                '<option value="' + distrito.id + '"> ' + distrito.nombre + '</option>'
            )

        }, this);

    });
    $('#selectDistrito').change(function () {
        console.log('SelectVal', $('#selectDistrito').val())
        var zonas = auxZonas.filter(data => {
            return data.idDistrito == $('#selectDistrito').val()
        });
        $('#selectZona').empty();
        console.log('ZONAS', zonas)
        $('#selectZona').append('<option>selecionar</option>')

        zonas.forEach(function (zona) {
            $('#selectZona').append(
                '<option value="' + zona.id + '"> ' + zona.nombre + '</option>'
            )

        }, this);

    });
    $('#selectZona').change(function () {
        console.log('SelectVal', $('#selectZona').val())
        var recintos = auxRecintos.filter(data => {
            return data.idZona == $('#selectZona').val()
        });
        $('#selectRecinto').empty();
        console.log('recintos', recintos)
        recintos.forEach(function (recinto) {
            $('#selectRecinto').append(
                '<option value="' + recinto.id + '"> ' + recinto.nombre + '</option>'
            )

        }, this);

    });
</script>

<script>
    var estRecinto = auxRecintos[0];


    var options2 = {
        data: auxRecintos,
        getValue: "nombre",
        list: {
            match: {
                enabled: true
            },
            onClickEvent: function () {
                var value = $("#autocomplete2").getSelectedItemData().id;

                cambiarRecinto(value);

                $("#autocomplete2").val('');
                //        $('#selectDistrito2').empty();
                //      $('#selectZona2').empty();
                //    $('#selectRecinto2').empty();

            }
        },
        template: {
            type: "description",
            fields: {
                description: "id"
            }
        }
    };

    $("#autocomplete2").easyAutocomplete(options2);

    var ctx = $('#chart')
    var myChart = new Chart(ctx, {
        plugins: [ChartDataLabels],
        type: 'bar',
        data: {
            // labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            labels: estRecinto.mesas.map(item => {
                return 'Mesa - ' + item['nombre'] + ' Inscritos' + item['inscritos']
            }),
            datasets: getDataPorRecinto(estRecinto)
        },
        options: {
            plugins: {
                datalabels: {
                    color: 'black',
                    align: 'center',
                    font: {
                        weight: 'bold',
                        defaultFontSize: 10
                    },

                    formatter: function (value, context) {

                        if (value.y > 9) {

                            return value.y + "% \n #" + value.cantidad
                        }
                        return value.y + "% #" + value.cantidad
                    }
                }

                // datalabels: {
                //     color: 'black',
                //     display: function(context) {
                //         return context.dataset.data[context.dataIndex] > 15;
                //     },
                //     font: {
                //         weight: 'bold'
                //     },
                //     formatter: Math.round
                // }
            },
            scales: {
                yAxes: [{
                    ticks: {
                        min: 0,
                        max: 100,
                        callback: function (value) {
                            return value + "%"
                        }
                    },
                    scaleLabel: {
                        display: true,
                        labelString: "Porcentaje de asistencia"
                    },
                    stacked: true
                }],
                xAxes: [{
                    ticks: {
                        mirror: false
                    },
                    stacked: true
                }],
            },

            title: {
                display: true,
                text: 'Recinto'
            }
        }
    });
    var ctx3 = $('#chart3')
    var myChart3 = new Chart(ctx3, {
      plugins: [ChartDataLabels],
      type: 'bar',
      data: {
        labels: ["Inscritos", "Validos", "Nulos", "Blancos"],
        // labels: estRecinto.mesas.map(item => {
        //     return 'Mesa - ' + item['nombre'] + ' Inscritos' + item['inscritos']
        // }),
        datasets: getDataPorRecinto2(estRecinto)
      },
      options: {
        plugins: {
          datalabels: {
            color: 'black',
            align: 'center',
            font: {
              weight: 'bold',
              defaultFontSize: 10
            },
  
            formatter: function (value, context) {
  
              return value.y + ' - '+value.cantidad+'%'
            }
          }
  
        },
        scales: {
          yAxes: [{
            ticks: {
  
            },
            scaleLabel: {
              display: true,
              labelString: "Inscritos Totales"
            },
  
          }],
          xAxes: [{
            ticks: {
              mirror: false
            },
  
          }],
        },
  
        title: {
          display: true,
          text: 'Recinto'
        }
      }
    });

    function getDataPorRecinto(recinto) {
        var dataSets = [
            //     {

            //     label: 'Emitidos',
            //     data: recinto.mesas.map(dato => {
            //         return (dato.votosEmitidos * 100 / dato.inscritos).toFixed(2)
            //     }),
            //     backgroundColor: 'rgba(255, 99, 132, 0.2)',
            //     borderColor: 'rgba(255,99,132,1)',
            //     borderWidth: 1
            // },
            {

                label: 'Válidos',
                data: recinto.mesas.map(dato => {
                    return {
                        y: (dato.votosValidos * 100 / dato.inscritos).toFixed(2),
                        cantidad: dato.votosValidos
                    }
                }),
                backgroundColor: 'rgba(54, 162, 235, 0.2)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }, {

                label: 'Blancos',
                data: recinto.mesas.map(dato => {
                    return {
                        y: (dato.votosBlancos * 100 / dato.inscritos).toFixed(2),
                        cantidad: dato.votosBlancos
                    }
                }),
                backgroundColor: 'rgba(255, 206, 86, 0.2)',
                borderColor: 'rgba(255, 206, 86, 1)',
                borderWidth: 1
            }, {

                label: 'Nulos',
                data: recinto.mesas.map(dato => {
                    return {
                        y: (dato.votosNulos * 100 / dato.inscritos).toFixed(2),
                        cantidad: dato.votosNulos
                    }
                }),
                backgroundColor: 'rgba(255, 99, 132, 0.2)',
                borderColor: 'rgba(255,99,132,1)',
                borderWidth: 1
            }, {

                label: 'FALTAS',
                data: recinto.mesas.map(dato => {
                    return {
                        y: ((dato.inscritos - dato.votosEmitidos) * 100 / dato.inscritos).toFixed(2),
                        cantidad: (dato.inscritos - dato.votosEmitidos)
                    }
                }),
                backgroundColor: 'rgb(255,255,255)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            },
        ];

        return dataSets;

    }
    function getDataPorRecinto2(recinto) {
        var suma = 0;
        recinto.mesas.forEach(function (item) {
          suma = suma + parseInt(item.inscritos);
    
        }, this);
        var sumaInscritos ={
          y: suma,
          cantidad: '100'
        };
    
    
         suma = 0;
        recinto.mesas.forEach(function (item) {
          suma = suma + parseInt(item.votosValidos);
    
        }, this);
        var sumaValidos ={
          y: suma,
          cantidad: (suma * 100 / sumaInscritos.y).toFixed(2)
        };
    
    
        suma = 0;
        recinto.mesas.forEach(function (item) {
          suma = suma + parseInt(item.votosBlancos);
    
        }, this);
        var sumaBlancos={
          y: suma,
          cantidad: (suma * 100 / sumaInscritos.y).toFixed(2)
        };
    
        suma = 0;
        recinto.mesas.forEach(function (item) {
          suma = suma + parseInt(item.votosNulos);
    
        }, this);
        var sumaNulos ={
          y: suma,
          cantidad: (suma * 100 / sumaInscritos.y).toFixed(2)
        };
    
        
    
    
        var dataSets = [{
          label: 'Válidos',
          data: [sumaInscritos, sumaValidos, sumaNulos, sumaBlancos],
    
          borderWidth: 1,
    
          backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
    
          ],
          borderColor: [
            'rgba(255,99,132,1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
    
          ],
        }];
    
        return dataSets;
    
      }

    function getRandomColor() {
        var letters = '0123456789ABCDEF';
        var color = '#';
        for (var i = 0; i < 6; i++) {
            color += letters[Math.floor(Math.random() * 16)];
        }
        return color;
    }

    function cambiarRecinto(idRecinto) {

        var auxRecinto = auxRecintos.filter(data => {
            return data.id == idRecinto;
        })
        var recintoSeleccionado = auxRecinto[0]
        myChart.data.labels = recintoSeleccionado.mesas.map(item => {
            return item['nombre'] + ' Inscritos' + item['inscritos']
        })
        myChart.data.datasets = getDataPorRecinto(recintoSeleccionado);
        myChart.options.title.text = 'new title';

        myChart.options.title = {
            display: true,
            text: 'Mesas :' + recintoSeleccionado.nombre
        }
        myChart.update();
        
    myChart3.data.datasets = getDataPorRecinto2(recintoSeleccionado);
    myChart3.options.title = {
      display: true,
      text: 'Recinto :' + recintoSeleccionado.nombre
    }
    myChart3.update();
    }


    $('#selectRecinto2').click(function () {

        cambiarRecinto($('#selectRecinto2').val());

    });
    $('#selectC2').change(function () {
        console.log('SelectVal', $('#selectC2').val())
        var distritos = auxDistritos.filter(data => {
            return data.idCircunscripcion == auxCircunscripciones[$('#selectC2').val()].id
        });
        $('#selectDistrito2').empty();
        console.log('DISTRITOS', distritos)
        $('#selectDistrito2').append('<option>Selecionar</option>')
        distritos.forEach(function (distrito) {
            $('#selectDistrito2').append(
                '<option value="' + distrito.id + '"> ' + distrito.nombre + '</option>'
            )

        }, this);

    });
    $('#selectDistrito2').change(function () {
        console.log('SelectVal', $('#selectDistrito2').val())
        var zonas = auxZonas.filter(data => {
            return data.idDistrito == $('#selectDistrito2').val()
        });
        $('#selectZona2').empty();
        console.log('ZONAS', zonas)
        $('#selectZona2').append('<option>selecionar</option>')

        zonas.forEach(function (zona) {
            $('#selectZona2').append(
                '<option value="' + zona.id + '"> ' + zona.nombre + '</option>'
            )

        }, this);

    });
    $('#selectZona2').change(function () {
        console.log('SelectVal', $('#selectZona2').val())
        var recintos = auxRecintos.filter(data => {
            return data.idZona == $('#selectZona2').val()
        });
        $('#selectRecinto2').empty();
        console.log('recintos', recintos)
        recintos.forEach(function (recinto) {
            $('#selectRecinto2').append(
                '<option value="' + recinto.id + '"> ' + recinto.nombre + '</option>'
            )

        }, this);

    });

    function topRecintos(tipo, vector) {

        var ordenado = vector.sort(function (a, b) {
            var suma1 = 0;
            a.mesas.forEach(item => {
                suma1 = (suma1 + parseFloat(item[tipo]));
            });
            var suma2 = 0;
            b.mesas.forEach(item => {
                suma2 = (suma2 + parseFloat(item[tipo]));
            });
            return suma1 - suma2;

        })

        console.log('abaco')
        return ordenado.reverse();
    };

    $('#btnEmitidos').click(function () {
        var listaTop = topRecintos('votosEmitidos');
        listaTop = listaTop.reverse();
        $('#ulSeccion').empty()
        listaTop.forEach((item, index) => {
            $('#ulSeccion').append(

                '<div class="col-6 col-md-2">' +
                '<button type="button" onclick="verRecinto(' + item.id + ')" class="btn btn-outline-success">' + (index + 1) + ' - ' + item.nombre + '</button>' +
                '</div>'
            )
        }, this)

    })

    $('#btnBlancos').click(function () {
        var listaTop = topRecintos('votosBlancos');
        listaTop = listaTop.reverse();
        $('#ulSeccion').empty()
        listaTop.forEach((item, index) => {
            $('#ulSeccion').append(

                '<div class="col-6 col-md-2">' +
                '<button type="button" onclick="verRecinto(' + item.id + ')"  class="btn btn-outline-success">' + (index + 1) + ' - ' + item.nombre + '</button>' +
                '</div>'
            )
        }, this)

    })

    $('#btnNulos').click(function () {
        var listaTop = topRecintos('votosNulos');
        listaTop = listaTop.reverse();
        $('#ulSeccion').empty()
        listaTop.forEach((item, index) => {
            $('#ulSeccion').append(

                '<div class="col-6 col-md-2">' +
                '<button type="button" onclick="verRecinto(' + item.id + ')" class="btn btn-outline-success">' + (index + 1) + ' - ' + item.nombre + '</button>' +
                '</div>'
            )
        }, this)

    })

    function verRecinto(idRecinto) {
        console.log('CLICK EN OSO', idRecinto)
        cambiarRecinto(idRecinto)
    }
</script>

<script>
    $('#selectC3').change(function () {
        var zonas = [];
        var recintos = [];
        var distritos = auxDistritos.filter(data => {
            return data.idCircunscripcion == auxCircunscripciones[$('#selectC3').val()].id
        });
        distritos.forEach(function (distrito) {
            zonas = zonas.concat(auxZonas.filter(data => {
                return data.idDistrito == distrito.id;
            }));
        }, this);
        zonas.forEach(function (zona) {
            recintos = recintos.concat(auxRecintos.filter(data => {
                return data.idZona == zona.id;
            }));
        }, this);

        recintos = topRecintos('inscritos', recintos);


        chart2.data.labels = recintos.map(dato => {

            var suma = 0;
            dato.mesas.forEach(function (item) {
                suma = suma + parseInt(item.inscritos);
            }, this);

            return dato['nombre'] + ' Total (' + suma + ')'
        });
        chart2.data.datasets = getDataPorRecintos(recintos);

        chart2.options.title = {
            display: true,
            text: 'Circunscripción :' + auxCircunscripciones[$('#selectC3').val()].nombre
        }
        chart2.update();





    });


    function getDataPorRecintos(recintos) {
        var dataSets = [{
            label: 'Válidos',
            data: recintos.map(dato => {
                var suma = 0;
                dato.mesas.forEach(function (item) {
                    suma = suma + parseInt(item.votosValidos);
                }, this);
                return {
                    x: suma,
                    cantidad: dato.votosValidos
                }
            }),
            backgroundColor: 'rgba(54, 162, 235, 0.2)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        }, {

            label: 'Blancos',
            data: recintos.map(dato => {
                var suma = 0;
                dato.mesas.forEach(function (item) {
                    suma = suma + parseInt(item.votosBlancos);
                }, this);
                return {
                    x: suma,
                    cantidad: dato.votosValidos
                }
            }),
            backgroundColor: 'rgba(255, 206, 86, 0.2)',
            borderColor: 'rgba(255, 206, 86, 1)',
            borderWidth: 1
        }, {

            label: 'Nulos',
            data: recintos.map(dato => {
                var suma = 0;
                dato.mesas.forEach(function (item) {
                    suma = suma + parseInt(item.votosNulos);
                }, this);
                return {
                    x: suma,
                    cantidad: dato.votosValidos
                }
            }),
            backgroundColor: 'rgba(255, 99, 132, 0.2)',
            borderColor: 'rgba(255,99,132,1)',
            borderWidth: 1
        }, {

            label: 'FALTAS',
            data: recintos.map(dato => {
                var suma = 0;
                dato.mesas.forEach(function (item) {
                    suma = suma + (parseInt(item.inscritos) - parseInt(item.votosEmitidos));
                }, this);
                return {
                    x: suma,
                    cantidad: dato.votosValidos
                }
            }),
            backgroundColor: 'rgb(255,255,255)',
            borderColor: 'rgba(54, 162, 235, 1)',
            borderWidth: 1
        },];

        return dataSets;

    }


    var ctx2 = $('#chart2')
    var chart2 = new Chart(ctx2, {
        type: 'horizontalBar',
        data: {
            labels: [],
            datasets: []
        },
        options: {
            plugins: {
                datalabels: {
                    color: 'black',
                    align: 'center',
                    font: {
                        weight: 'bold',
                        defaultFontSize: 10
                    },
                    formatter: function (value, context) {

                        // console.log('DATA LABES ', value)

                        return value.x
                    }

                }



            },
            scales: {
                xAxes: [{
                    ticks: {
                        beginAtZero: true
                    },
                    scaleLabel: {
                        display: true,
                        labelString: "nro de Votos"
                    },
                    stacked: true
                }],
                yAxes: [{


                    stacked: true
                }],
            }
        }
    });
</script>